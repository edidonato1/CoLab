[{"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/medium/MediumDetail.jsx":"1","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/post/PostCreate.jsx":"2","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/post/PostEdit.jsx":"3","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/post/PostDetail.jsx":"4","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/stylesheets/MediumStyles.js":"5","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/medium/Media.jsx":"6","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/stylesheets/MediaStyles.js":"7","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/stylesheets/UserAside.js":"8","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/components/UserAside.jsx":"9","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/stylesheets/FormStyles.js":"10","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/stylesheets/Home.js":"11","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/stylesheets/Layout.js":"12","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/components/Header.jsx":"13","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/App.jsx":"14","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/user/Profile.jsx":"15","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/stylesheets/ProfileStyles.js":"16","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/components/ProfileAside.jsx":"17","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/user/ProfileEdit.jsx":"18","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/services/media.js":"19"},{"size":2389,"mtime":1607029395682,"results":"20","hashOfConfig":"21"},{"size":1714,"mtime":1606967035666,"results":"22","hashOfConfig":"21"},{"size":2139,"mtime":1606969457577,"results":"23","hashOfConfig":"21"},{"size":1842,"mtime":1607032941327,"results":"24","hashOfConfig":"21"},{"size":2802,"mtime":1607033347549,"results":"25","hashOfConfig":"21"},{"size":2218,"mtime":1607026420841,"results":"26","hashOfConfig":"21"},{"size":2343,"mtime":1607028385076,"results":"27","hashOfConfig":"21"},{"size":742,"mtime":1607011500221,"results":"28","hashOfConfig":"21"},{"size":1146,"mtime":1606963211334,"results":"29","hashOfConfig":"21"},{"size":1075,"mtime":1607028408859,"results":"30","hashOfConfig":"21"},{"size":1115,"mtime":1607024339642,"results":"31","hashOfConfig":"21"},{"size":1543,"mtime":1607026169009,"results":"32","hashOfConfig":"21"},{"size":920,"mtime":1606969457572,"results":"33","hashOfConfig":"21"},{"size":2356,"mtime":1607014199128,"results":"34","hashOfConfig":"21"},{"size":2097,"mtime":1607013230839,"results":"35","hashOfConfig":"21"},{"size":2653,"mtime":1607021788066,"results":"36","hashOfConfig":"21"},{"size":1320,"mtime":1607012407177,"results":"37","hashOfConfig":"21"},{"size":3953,"mtime":1607023729541,"results":"38","hashOfConfig":"21"},{"size":522,"mtime":1607021206244,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},"1xm85ty",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/medium/MediumDetail.jsx",["81"],"import React, { useState, useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { getOneMedium } from '../../services/media'\nimport MediumStyles from '../../stylesheets/MediumStyles';\nimport PostCreate from '../post/PostCreate';\nimport PostDetail from '../post/PostDetail';\nimport UserAside from '../../components/UserAside';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPencilAlt } from '@fortawesome/free-solid-svg-icons';\n\nexport default function MediumDetail(props) {\n  const [medium, setMedium] = useState(null);\n  const [createPost, setCreatePost] = useState(false);\n  const [updated, setUpdated] = useState(false)\n  const { id } = useParams();\n  const { loggedInUser, media } = props;\n\n\n\n  useEffect(() => {\n    const fetchMedium = async () => {\n      const mediumData = await getOneMedium(id);\n      setMedium(mediumData);\n    }\n    fetchMedium(id);\n  }, [id, createPost, updated])\n\n\n  return (\n\n    <MediumStyles>\n      <div className=\"user-aside\">\n        <UserAside\n          media={media}\n          loggedInUser={loggedInUser} />\n      </div>\n      {!createPost ?\n        <div className=\"medium-parent\">\n          <div\n            className=\"medium-title\">\n            <img src={medium?.img_url} alt={medium?.name} />\n            <div className=\"title-right\">\n              <h1 className=\"name\">{medium?.name}</h1>\n              <h4>{medium?.posts.length} posts</h4>\n            </div>\n          </div>\n          <p\n            className=\"create-post\"\n            onClick={() => setCreatePost(!createPost)}>new post <FontAwesomeIcon className=\"icon\" icon={faPencilAlt} />\n          </p>\n          <div className=\"post-container\">\n\n            {medium?.posts.length > 0 ?\n              medium?.posts.map((post) => (\n              <PostDetail\n                updated={updated}\n                setUpdated={setUpdated}\n                loggedInUser={loggedInUser}\n                key={post.id}\n                post={post} />\n              )).reverse()\n              :\n              <h3 className=\"no-posts\">no posts for { medium?.name} yet.</h3>\n          }\n          </div>\n        </div>\n        :\n        <PostCreate\n          loggedInUser={loggedInUser}\n          createPost={createPost}\n          setCreatePost={setCreatePost}\n          medium={medium}\n          mediumId={id} />\n      }\n    </MediumStyles>\n\n  )\n}","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/post/PostCreate.jsx",[],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/post/PostEdit.jsx",["82"],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/post/PostDetail.jsx",["83","84"],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/stylesheets/MediumStyles.js",[],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/medium/Media.jsx",["85"],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/stylesheets/MediaStyles.js",[],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/stylesheets/UserAside.js",[],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/components/UserAside.jsx",["86"],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/stylesheets/FormStyles.js",[],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/stylesheets/Home.js",[],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/stylesheets/Layout.js",[],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/components/Header.jsx",["87"],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/App.jsx",["88"],"import Home from './screens/Home';\nimport Layout from './components/Layout';\nimport Login from './screens/user/Login';\nimport Register from './screens/user/Register';\nimport MediumContainer from './containers/MediumContainer'\nimport Profile from './screens/user/Profile';\nimport { useEffect, useState, useContext } from 'react';\nimport { Route, Switch, useHistory } from 'react-router-dom';\nimport { getAllMedia } from './services/media'\nimport { verifyUser, loginUser, registerUser, removeToken } from './services/auth';\nimport './App.css';\n\n\nfunction App() {\n  const [loggedInUser, setLoggedInUser] = useState(null)\n  const [media, setMedia] = useState([])\n  const [updated, setUpdated] = useState(false)\n\n  const history = useHistory();\n\n\n  useEffect(() => {\n    const handleVerify = async () => {\n      const userData = await verifyUser();\n      setLoggedInUser(userData)\n    }\n    handleVerify();\n  }, [updated])\n\n  useEffect(() => {\n    const fetchMedia = async () => {\n      const mediaData = await getAllMedia();\n      setMedia(mediaData);\n    }\n    fetchMedia();\n  }, [])\n\n  const handleLogin = async (loginData) => {\n    const userData = await loginUser(loginData);\n    setLoggedInUser(userData);\n    history.push('/');\n  }\n\n  const handleRegister = async (registerData) => {\n    const userData = await registerUser(registerData);\n    setLoggedInUser(userData)\n    history.push('/');\n  }\n\n  const handleLogout = async () => {\n    setLoggedInUser(null);\n    localStorage.removeItem('authToken')\n    removeToken();\n    history.push('/')\n  }\n\n  return (\n    <Layout\n      loggedInUser={loggedInUser}\n      handleLogout={handleLogout}\n    >\n      <Switch>\n        <Route exact path='/' component={Home} />\n        <Route path='/login' >\n          <Login handleLogin={handleLogin} />\n        </Route>\n        <Route path='/register'>\n          <Register handleRegister={handleRegister} />\n        </Route>\n        <Route path='/profile'>\n          <Profile\n            updated={updated}\n            setUpdated={setUpdated}\n            media={media}\n            loggedInUser={loggedInUser}\n            handleLogout={handleLogout} />\n        </Route>\n        <Route path='/media' >\n          <MediumContainer\n            media={media}\n            loggedInUser={loggedInUser} />\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/user/Profile.jsx",["89","90","91","92"],"import React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport ProfileEdit from '../../screens/user/ProfileEdit';\nimport ProfileAside from '../../components/ProfileAside';\nimport ProfileStyles from '../../stylesheets/ProfileStyles';\nimport flask from '../../assets/images/flask.png'\n\n\nexport default function Profile(props) {\n  const [editProfile, setEditProfile] = useState(false)\n  const { updated, setUpdated } = props\n\n  const { loggedInUser, media, handleLogout } = props;\n\n\n\n\n  if (!loggedInUser) {\n    return (<Redirect to=\"/\" />)\n  }\n\n\n  return (\n    <>\n      {\n        !editProfile ?\n          <React.Fragment>\n            <ProfileStyles >\n              <aside className=\"side-bar\">\n                <h1 id=\"profile-title\">your profile</h1>\n                <ProfileAside\n                  media={media}\n                  loggedInUser={loggedInUser}\n                  handleLogout={handleLogout}\n                  editProfile={editProfile}\n                  setEditProfile={setEditProfile} />\n              </aside>\n              <div className=\"dash-parent\">\n                <h2>dashboard</h2>\n                <div className=\"dashboard\">\n                  <div className=\"dash-photo-box\">\n                    <div className=\"photo-box-top\">\n                      <img id=\"top-left\" src={loggedInUser.media[0] ? loggedInUser.media[0].img_url : flask} />\n                      <img id=\"top-right\" src={loggedInUser.media[1] ? loggedInUser.media[1].img_url : flask} />\n                    </div>\n                    <div className=\"photo-box-bottom\">\n                      <img id=\"bottom\" src={loggedInUser.media[2] ? loggedInUser.media[2].img_url : flask} />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </ProfileStyles>\n          </React.Fragment>\n          :\n          <ProfileEdit\n            updated={updated}\n            setUpdated={setUpdated}\n            setEditProfile={setEditProfile}\n            media={media}\n            loggedInUser={loggedInUser} />\n      }\n    </>\n  )\n}\n\n","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/stylesheets/ProfileStyles.js",[],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/components/ProfileAside.jsx",["93","94"],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/user/ProfileEdit.jsx",["95","96"],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/services/media.js",["97"],{"ruleId":"98","severity":1,"message":"99","line":2,"column":10,"nodeType":"100","messageId":"101","endLine":2,"endColumn":14},{"ruleId":"98","severity":1,"message":"102","line":6,"column":68,"nodeType":"100","messageId":"101","endLine":6,"endColumn":83},{"ruleId":"103","severity":1,"message":"104","line":23,"column":6,"nodeType":"105","endLine":23,"endColumn":16,"suggestions":"106"},{"ruleId":"107","severity":1,"message":"108","line":36,"column":31,"nodeType":"109","messageId":"110","endLine":36,"endColumn":33},{"ruleId":"111","severity":1,"message":"112","line":51,"column":21,"nodeType":"113","endLine":51,"endColumn":49},{"ruleId":"98","severity":1,"message":"114","line":1,"column":20,"nodeType":"100","messageId":"101","endLine":1,"endColumn":29},{"ruleId":"98","severity":1,"message":"115","line":5,"column":8,"nodeType":"100","messageId":"101","endLine":5,"endColumn":20},{"ruleId":"98","severity":1,"message":"116","line":7,"column":31,"nodeType":"100","messageId":"101","endLine":7,"endColumn":41},{"ruleId":"98","severity":1,"message":"114","line":1,"column":27,"nodeType":"100","messageId":"101","endLine":1,"endColumn":36},{"ruleId":"111","severity":1,"message":"112","line":43,"column":23,"nodeType":"113","endLine":43,"endColumn":112},{"ruleId":"111","severity":1,"message":"112","line":44,"column":23,"nodeType":"113","endLine":44,"endColumn":113},{"ruleId":"111","severity":1,"message":"112","line":47,"column":23,"nodeType":"113","endLine":47,"endColumn":110},{"ruleId":"98","severity":1,"message":"114","line":1,"column":20,"nodeType":"100","messageId":"101","endLine":1,"endColumn":29},{"ruleId":"111","severity":1,"message":"112","line":23,"column":9,"nodeType":"113","endLine":23,"endColumn":253},{"ruleId":"98","severity":1,"message":"117","line":1,"column":20,"nodeType":"100","messageId":"101","endLine":1,"endColumn":29},{"ruleId":"111","severity":1,"message":"112","line":56,"column":13,"nodeType":"113","endLine":56,"endColumn":72},{"ruleId":"98","severity":1,"message":"118","line":19,"column":9,"nodeType":"100","messageId":"101","endLine":19,"endColumn":13},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'updateCreatedAt' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'post.user_id'. Either include it or remove the dependency array.","ArrayExpression",["119"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","'LayoutStyled' is defined but never used.","'useContext' is defined but never used.","'useParams' is defined but never used.","'resp' is assigned a value but never used.",{"desc":"120","fix":"121"},"Update the dependencies array to be: [editPost, post.user_id]",{"range":"122","text":"123"},[695,705],"[editPost, post.user_id]"]