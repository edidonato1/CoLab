[{"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/App.jsx":"1","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/user/Login.jsx":"2","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/Home.jsx":"3","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/user/Register.jsx":"4","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/services/apiConfig.js":"5","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/containers/MediumContainer.jsx":"6","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/medium/Media.jsx":"7","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/medium/MediumDetail.jsx":"8","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/post/PostCreate.jsx":"9","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/services/media.js":"10","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/post/PostDetail.jsx":"11","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/post/PostEdit.jsx":"12","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/services/posts.js":"13","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/medium/MediumRequest.jsx":"14","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/services/users.js":"15","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/services/auth.js":"16","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/user/Profile.jsx":"17","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/components/Layout.jsx":"18","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/stylesheets/ProfileStyles.js":"19","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/user/ProfileEdit.jsx":"20"},{"size":2285,"mtime":1606873884652,"results":"21","hashOfConfig":"22"},{"size":993,"mtime":1606835714476,"results":"23","hashOfConfig":"22"},{"size":396,"mtime":1606787434425,"results":"24","hashOfConfig":"22"},{"size":1517,"mtime":1606873865868,"results":"25","hashOfConfig":"22"},{"size":139,"mtime":1606776515671,"results":"26","hashOfConfig":"22"},{"size":931,"mtime":1606873306306,"results":"27","hashOfConfig":"22"},{"size":562,"mtime":1606861751378,"results":"28","hashOfConfig":"22"},{"size":1303,"mtime":1606861323668,"results":"29","hashOfConfig":"22"},{"size":1328,"mtime":1606857084455,"results":"30","hashOfConfig":"22"},{"size":521,"mtime":1606830593004,"results":"31","hashOfConfig":"22"},{"size":1313,"mtime":1606861421122,"results":"32","hashOfConfig":"22"},{"size":1353,"mtime":1606861398596,"results":"33","hashOfConfig":"22"},{"size":610,"mtime":1606860908104,"results":"34","hashOfConfig":"22"},{"size":2068,"mtime":1606863473043,"results":"35","hashOfConfig":"22"},{"size":275,"mtime":1606777732439,"results":"36","hashOfConfig":"22"},{"size":935,"mtime":1606776533426,"results":"37","hashOfConfig":"22"},{"size":1143,"mtime":1606874682855,"results":"38","hashOfConfig":"22"},{"size":105,"mtime":1606869238887,"results":"39","hashOfConfig":"22"},{"size":482,"mtime":1606872162765,"results":"40","hashOfConfig":"22"},{"size":1129,"mtime":1606874710727,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},"1xm85ty",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"47"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"47"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"47"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"47"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"47"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/App.jsx",["89","90"],"import Home from './screens/Home';\nimport Layout from './components/Layout';\nimport Login from './screens/user/Login';\nimport Register from './screens/user/Register';\nimport MediumContainer from './containers/MediumContainer'\nimport Profile from './screens/user/Profile';\nimport { useEffect, useState, useContext } from 'react';\nimport { Route, Switch, useHistory } from 'react-router-dom';\nimport { getAllMedia } from './services/media';\nimport { verifyUser, loginUser, registerUser, removeToken } from './services/auth';\nimport './App.css';\n\n\nfunction App() {\n  const [loggedInUser, setLoggedInUser] = useState(null)\n  const [media, setMedia] = useState([])\n  const history = useHistory();\n\n\n  useEffect(() => {\n    const handleVerify = async () => {\n      const userData = await verifyUser();\n      setLoggedInUser(userData)\n      if (!userData) {\n        history.push('/')\n      }\n    }\n    handleVerify();\n  }, [])\n\n  useEffect(() => {\n    const fetchMedia = async () => {\n      const mediaData = await getAllMedia();\n      setMedia(mediaData);\n    }\n    fetchMedia();\n  }, [])\n\n  const handleLogin = async (loginData) => {\n    const userData = await loginUser(loginData);\n    setLoggedInUser(userData);\n    history.push('/');\n  }\n\n  const handleRegister = async (registerData) => {\n    const userData = await registerUser(registerData);\n    setLoggedInUser(userData)\n    history.push('/');\n  }\n\n  const handleLogout = async () => {\n    setLoggedInUser(null);\n    localStorage.removeItem('authToken')\n    removeToken();\n    history.push('/')\n  }\n\n  return (\n    <Layout\n      loggedInUser={loggedInUser}\n      handleLogout={handleLogout}>\n      <Switch>\n        <Route exact path='/' component={Home} />\n        <Route path='/login' >\n          <Login handleLogin={handleLogin} />\n        </Route>\n        <Route path='/register'>\n          <Register\n            media={media}\n            handleRegister={handleRegister} />\n        </Route>\n        <Route path='/profile'>\n          <Profile\n            media={media}\n            loggedInUser={loggedInUser} />\n        </Route>\n        <Route path='/media' >\n          <MediumContainer\n            media={media}\n            loggedInUser={loggedInUser} />\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/user/Login.jsx",[],["91","92"],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/Home.jsx",[],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/user/Register.jsx",["93","94"],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/services/apiConfig.js",[],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/containers/MediumContainer.jsx",["95"],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/medium/Media.jsx",["96","97"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function Media({media}) {\n  // const { media } = props\n\n  return (\n    <div>\n      <h1>Media</h1>\n      {\n        media.map((medium) => (\n          <React.Fragment key={medium.id}>\n            <Link to={`/media/${medium.id}`}>\n              <h2>{medium.name}</h2>\n              <img src={medium.img_url} />\n            </Link>\n            <>\n              <p>{medium.description}</p>\n            </>\n          </React.Fragment>\n         ))\n      }\n    </div>\n  )\n}","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/medium/MediumDetail.jsx",["98"],"import React, { useState, useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { getOneMedium } from '../../services/media'\nimport PostCreate from '../post/PostCreate';\nimport PostDetail from '../post/PostDetail'\n\nexport default function MediumDetail(props) {\n  const [medium, setMedium] = useState(null);\n  const [createPost, setCreatePost] = useState(false);\n  const [updated, setUpdated] = useState(false)\n  const { id } = useParams();\n  const { loggedInUser } = props;\n\n\n\n  useEffect(() => {\n    const fetchMedium = async () => {\n      const mediumData = await getOneMedium(id);\n      setMedium(mediumData);\n    }\n    fetchMedium(id);\n  }, [id, createPost, updated])\n\n\n  return (\n    <>{!createPost ?\n      <>\n        <h1>{medium?.name}</h1>\n        <h2 onClick={() => setCreatePost(!createPost)}>post to {medium?.name}</h2>\n        {medium?.posts.map((post) => (\n          <PostDetail\n            updated={updated}\n            setUpdated={setUpdated}\n            loggedInUser={loggedInUser}\n            key={post.id}\n            post={post} />\n        ))}\n      </>\n      :\n      <PostCreate\n        loggedInUser={loggedInUser}\n        createPost={createPost}\n        setCreatePost={setCreatePost}\n        medium={medium}\n        mediumId={id} />\n    }\n    </>\n  )\n}","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/post/PostCreate.jsx",[],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/services/media.js",["99"],"import api from './apiConfig'\n\nexport const getAllMedia = async () => {\n  const resp = await api.get('/media');\n  return resp.data;\n}\n\nexport const getOneMedium = async (id) => {\n  const resp = await api.get(`/media/${id}`);\n  return resp.data;\n}\n\nexport const addMedium = async (mediumId, userId) => {\n  const resp = await api.put(`/media/${mediumId}/users/${userId}`)\n  return resp.data;\n}\n\nexport const removeMediun = async (mediumId, userId) => {\n  const resp = await api.patch(`/media/${mediumId}/users/${userId}`)\n}","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/post/PostDetail.jsx",["100","101","102"],"import { useState, useEffect, useReducer } from 'react';\nimport { getOneUser } from '../../services/users';\nimport PostEdit from './PostEdit';\n\nexport default function PostDetail(props) {\n  const { post, loggedInUser, updated, setUpdated } = props;\n  const [editPost, setEditPost] = useState(false);\n  const [user, setUser] = useState('');\n\n\n\n  const updateCreatedAt = (str) => {\n    let newStr = str.split('').splice(0, 10).join('').split('-').reverse()\n    return newStr.map(item => item.charAt(0) === '0' ? item.slice(1) : item).join('/')\n  }\n\n  useEffect(() => {\n    const fetchUser = async (id) => {\n      const user = await (getOneUser(id));\n      setUser(user.username)\n    }\n    fetchUser(post.user_id)\n  }, [editPost])\n\n\n  return (\n    <>\n      {!editPost ?\n        <div>\n          {loggedInUser?.id == post.user_id ?\n            <p onClick={() => setEditPost(!editPost)}>Edit</p>\n            :\n            <> </>\n          }\n          <h3>{post.subject}</h3>\n          <h4>{user}</h4>\n          <p>{post.content}</p>\n          <p>posted: {updateCreatedAt(post.created_at)}</p>\n        </div>\n        :\n        <PostEdit\n          editPost={editPost}\n          setEditPost={setEditPost}\n          post={post}\n          updated={updated}\n          setUpdated={setUpdated}\n        />\n      }\n    </>\n  )\n}\n","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/post/PostEdit.jsx",[],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/services/posts.js",["103","104","105"],"import api from './apiConfig'\n\nexport const getAllPosts = async (mediumId) => {\n  const resp = await api.get(`/media/${mediumId}/posts/`);\n}\n\nexport const getOnePost = async (id) => {\n  const resp = await api.get(`/posts/${id}`)\n}\n\nexport const addPost = async (mediumId, postData) => {\n  const resp = await api.post(`/media/${mediumId}/posts/`, { post: postData })\n  return resp.data\n}\n\nexport const putPost = async (id, postData) => {\n  const resp = await api.put(`/posts/${id}`, {post: postData})\n}\n\nexport const destroyPost = async (id) => {\n  const resp = await api.delete(`posts/${id}`);\n  return resp;\n}","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/medium/MediumRequest.jsx",[],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/services/users.js",[],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/services/auth.js",[],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/user/Profile.jsx",["106","107"],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/components/Layout.jsx",[],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/stylesheets/ProfileStyles.js",[],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/user/ProfileEdit.jsx",["108","109","110","111"],{"ruleId":"112","severity":1,"message":"113","line":7,"column":31,"nodeType":"114","messageId":"115","endLine":7,"endColumn":41},{"ruleId":"116","severity":1,"message":"117","line":29,"column":6,"nodeType":"118","endLine":29,"endColumn":8,"suggestions":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"112","severity":1,"message":"124","line":1,"column":20,"nodeType":"114","messageId":"115","endLine":1,"endColumn":29},{"ruleId":"112","severity":1,"message":"125","line":4,"column":11,"nodeType":"114","messageId":"115","endLine":4,"endColumn":16},{"ruleId":"112","severity":1,"message":"126","line":10,"column":10,"nodeType":"114","messageId":"115","endLine":10,"endColumn":15},{"ruleId":"112","severity":1,"message":"127","line":1,"column":17,"nodeType":"114","messageId":"115","endLine":1,"endColumn":25},{"ruleId":"128","severity":1,"message":"129","line":15,"column":15,"nodeType":"130","endLine":15,"endColumn":43},{"ruleId":"112","severity":1,"message":"131","line":2,"column":10,"nodeType":"114","messageId":"115","endLine":2,"endColumn":14},{"ruleId":"112","severity":1,"message":"132","line":19,"column":9,"nodeType":"114","messageId":"115","endLine":19,"endColumn":13},{"ruleId":"112","severity":1,"message":"133","line":1,"column":31,"nodeType":"114","messageId":"115","endLine":1,"endColumn":41},{"ruleId":"116","severity":1,"message":"134","line":23,"column":6,"nodeType":"118","endLine":23,"endColumn":16,"suggestions":"135"},{"ruleId":"136","severity":1,"message":"137","line":30,"column":29,"nodeType":"138","messageId":"139","endLine":30,"endColumn":31},{"ruleId":"112","severity":1,"message":"132","line":4,"column":9,"nodeType":"114","messageId":"115","endLine":4,"endColumn":13},{"ruleId":"112","severity":1,"message":"132","line":8,"column":9,"nodeType":"114","messageId":"115","endLine":8,"endColumn":13},{"ruleId":"112","severity":1,"message":"132","line":17,"column":9,"nodeType":"114","messageId":"115","endLine":17,"endColumn":13},{"ruleId":"112","severity":1,"message":"124","line":1,"column":27,"nodeType":"114","messageId":"115","endLine":1,"endColumn":36},{"ruleId":"112","severity":1,"message":"125","line":9,"column":25,"nodeType":"114","messageId":"115","endLine":9,"endColumn":30},{"ruleId":"112","severity":1,"message":"124","line":1,"column":20,"nodeType":"114","messageId":"115","endLine":1,"endColumn":29},{"ruleId":"112","severity":1,"message":"125","line":4,"column":11,"nodeType":"114","messageId":"115","endLine":4,"endColumn":16},{"ruleId":"112","severity":1,"message":"140","line":4,"column":18,"nodeType":"114","messageId":"115","endLine":4,"endColumn":30},{"ruleId":"141","severity":1,"message":"142","line":49,"column":1,"nodeType":"143","messageId":"144","endLine":58,"endColumn":13},"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["145"],"no-native-reassign",["146"],"no-negated-in-lhs",["147"],"'useEffect' is defined but never used.","'media' is assigned a value but never used.","'posts' is assigned a value but never used.","'useState' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Link' is defined but never used.","'resp' is assigned a value but never used.","'useReducer' is defined but never used.","React Hook useEffect has a missing dependency: 'post.user_id'. Either include it or remove the dependency array.",["148"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'loggedInUser' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock",{"desc":"149","fix":"150"},"no-global-assign","no-unsafe-negation",{"desc":"151","fix":"152"},"Update the dependencies array to be: [history]",{"range":"153","text":"154"},"Update the dependencies array to be: [editPost, post.user_id]",{"range":"155","text":"156"},[916,918],"[history]",[716,726],"[editPost, post.user_id]"]