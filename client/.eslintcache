[{"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/medium/MediumDetail.jsx":"1","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/post/PostCreate.jsx":"2","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/post/PostEdit.jsx":"3","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/post/PostDetail.jsx":"4","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/stylesheets/MediumStyles.js":"5","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/medium/Media.jsx":"6","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/stylesheets/MediaStyles.js":"7","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/stylesheets/UserAside.js":"8","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/components/UserAside.jsx":"9","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/stylesheets/FormStyles.js":"10","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/stylesheets/Home.js":"11","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/stylesheets/Layout.js":"12","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/components/Header.jsx":"13"},{"size":2391,"mtime":1606963486818,"results":"14","hashOfConfig":"15"},{"size":1714,"mtime":1606967035666,"results":"16","hashOfConfig":"15"},{"size":2139,"mtime":1606969035861,"results":"17","hashOfConfig":"15"},{"size":1890,"mtime":1606964946036,"results":"18","hashOfConfig":"15"},{"size":2209,"mtime":1606967846227,"results":"19","hashOfConfig":"15"},{"size":1625,"mtime":1606969383543,"results":"20","hashOfConfig":"15"},{"size":1498,"mtime":1606969346427,"results":"21","hashOfConfig":"15"},{"size":544,"mtime":1606964357204,"results":"22","hashOfConfig":"15"},{"size":1146,"mtime":1606963211334,"results":"23","hashOfConfig":"15"},{"size":992,"mtime":1606967124665,"results":"24","hashOfConfig":"15"},{"size":1068,"mtime":1606967414882,"results":"25","hashOfConfig":"15"},{"size":1295,"mtime":1606968529616,"results":"26","hashOfConfig":"15"},{"size":920,"mtime":1606968432514,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1xm85ty",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/medium/MediumDetail.jsx",["55"],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/post/PostCreate.jsx",[],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/post/PostEdit.jsx",["56"],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/post/PostDetail.jsx",["57","58"],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/stylesheets/MediumStyles.js",[],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/medium/Media.jsx",["59","60"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport MediaStyles from '../../stylesheets/MediaStyles';\nimport UserAside from '../../components/UserAside';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\n\nexport default function Media(props) {\n  const { media, loggedInUser } = props\n\n\n  return (\n    <MediaStyles>\n      <p id=\"add-request\">don't see your preferred medium?<br />\n        request to add one here <Link to=\"/media/request\" ><FontAwesomeIcon className=\"icon\" icon={faPlusCircle}/></Link>\n      </p>\n      \n      <h1>all media</h1>\n      <div className=\"all-media\">\n        <div className=\"user-aside\">\n          <UserAside\n            media={media}\n            loggedInUser={loggedInUser} />\n        </div>\n        <div className=\"media-container\">\n          {\n            media.map((medium) => (\n              <React.Fragment key={medium.id} >\n                <div className=\"media-card\">\n                  <div id=\"image-container\">\n                    <img src={medium.img_url} />\n                  </div>\n                  <div className=\"media-card-right\">\n                    <Link to={`/media/${medium.id}`}>\n                      <h2>{medium.name}</h2>\n                    </Link>\n                    <div className=\"description\">\n                      <p id=\"description\">{medium.description}</p>\n                    </div>\n                  </div>\n                </div>\n              </React.Fragment>\n            ))\n          }\n        </div>\n      </div>\n    </MediaStyles>\n  )\n}","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/stylesheets/MediaStyles.js",[],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/stylesheets/UserAside.js",[],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/components/UserAside.jsx",["61"],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/stylesheets/FormStyles.js",[],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/stylesheets/Home.js",[],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/stylesheets/Layout.js",[],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/components/Header.jsx",["62"],{"ruleId":"63","severity":1,"message":"64","line":2,"column":10,"nodeType":"65","messageId":"66","endLine":2,"endColumn":14},{"ruleId":"63","severity":1,"message":"67","line":6,"column":68,"nodeType":"65","messageId":"66","endLine":6,"endColumn":83},{"ruleId":"68","severity":1,"message":"69","line":23,"column":6,"nodeType":"70","endLine":23,"endColumn":16,"suggestions":"71"},{"ruleId":"72","severity":1,"message":"73","line":36,"column":31,"nodeType":"74","messageId":"75","endLine":36,"endColumn":33},{"ruleId":"63","severity":1,"message":"76","line":1,"column":17,"nodeType":"65","messageId":"66","endLine":1,"endColumn":25},{"ruleId":"77","severity":1,"message":"78","line":31,"column":21,"nodeType":"79","endLine":31,"endColumn":49},{"ruleId":"63","severity":1,"message":"80","line":1,"column":20,"nodeType":"65","messageId":"66","endLine":1,"endColumn":29},{"ruleId":"63","severity":1,"message":"81","line":5,"column":8,"nodeType":"65","messageId":"66","endLine":5,"endColumn":20},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'updateCreatedAt' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'post.user_id'. Either include it or remove the dependency array.","ArrayExpression",["82"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","'LayoutStyled' is defined but never used.",{"desc":"83","fix":"84"},"Update the dependencies array to be: [editPost, post.user_id]",{"range":"85","text":"86"},[695,705],"[editPost, post.user_id]"]