[{"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/App.jsx":"1","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/user/Login.jsx":"2","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/Home.jsx":"3","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/user/Register.jsx":"4","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/services/apiConfig.js":"5","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/containers/MediumContainer.jsx":"6","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/medium/Media.jsx":"7","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/medium/MediumDetail.jsx":"8","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/post/PostCreate.jsx":"9","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/services/media.js":"10","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/post/PostDetail.jsx":"11","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/post/PostEdit.jsx":"12","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/services/posts.js":"13","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/medium/MediumRequest.jsx":"14","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/services/users.js":"15","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/services/auth.js":"16","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/user/Profile.jsx":"17","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/components/Layout.jsx":"18","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/stylesheets/ProfileStyles.js":"19","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/user/ProfileEdit.jsx":"20","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/index.js":"21"},{"size":2241,"mtime":1606920407787,"results":"22","hashOfConfig":"23"},{"size":993,"mtime":1606835714476,"results":"24","hashOfConfig":"23"},{"size":396,"mtime":1606787434425,"results":"25","hashOfConfig":"23"},{"size":1517,"mtime":1606873865868,"results":"26","hashOfConfig":"23"},{"size":139,"mtime":1606776515671,"results":"27","hashOfConfig":"23"},{"size":931,"mtime":1606873306306,"results":"28","hashOfConfig":"23"},{"size":562,"mtime":1606861751378,"results":"29","hashOfConfig":"23"},{"size":1303,"mtime":1606861323668,"results":"30","hashOfConfig":"23"},{"size":1328,"mtime":1606857084455,"results":"31","hashOfConfig":"23"},{"size":521,"mtime":1606830593004,"results":"32","hashOfConfig":"23"},{"size":1313,"mtime":1606861421122,"results":"33","hashOfConfig":"23"},{"size":1353,"mtime":1606861398596,"results":"34","hashOfConfig":"23"},{"size":610,"mtime":1606860908104,"results":"35","hashOfConfig":"23"},{"size":2068,"mtime":1606863473043,"results":"36","hashOfConfig":"23"},{"size":275,"mtime":1606777732439,"results":"37","hashOfConfig":"23"},{"size":935,"mtime":1606776533426,"results":"38","hashOfConfig":"23"},{"size":1295,"mtime":1606921127664,"results":"39","hashOfConfig":"23"},{"size":105,"mtime":1606869238887,"results":"40","hashOfConfig":"23"},{"size":482,"mtime":1606872162765,"results":"41","hashOfConfig":"23"},{"size":2414,"mtime":1606920896072,"results":"42","hashOfConfig":"23"},{"size":590,"mtime":1606784343017,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1xm85ty",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"51"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"51"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"51"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"62"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"51"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/App.jsx",["95"],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/user/Login.jsx",[],["96","97"],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/Home.jsx",[],["98","99"],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/user/Register.jsx",["100","101"],"import { useState, useEffect } from 'react'\n\nexport default function Register(props) {\n  const { media } = props;\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    password: '',\n    img_url: '',\n    bio: '',\n    media: []\n  })\n\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value\n    }))\n  }\n\n  return (\n    <form onSubmit={(e) => {\n      e.preventDefault();\n      props.handleRegister(formData);\n    }}>\n      <h1>register</h1>\n      <label> username\n        <input \n          type='text'\n          name='username'\n          value={formData.username}\n          onChange={handleChange}\n          />\n      </label>\n      <label> email\n        <input \n          type='text'\n          name='email'\n          value={formData.email}\n          onChange={handleChange}\n          />\n      </label>\n      <label> password\n        <input \n          type='password'\n          name='password'\n          value={formData.password}\n          onChange={handleChange}\n          />\n      </label>\n      <label> image url\n        <input \n          type='text'\n          name='img_url'\n          value={formData.img_url}\n          onChange={handleChange}\n          />\n      </label>\n      <label> bio\n        <input \n          type='text'\n          name='bio'\n          value={formData.bio}\n          onChange={handleChange}\n          />\n      </label>\n\n      <button type=\"submit\">send</button>\n    </form>\n  )\n\n}","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/services/apiConfig.js",[],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/containers/MediumContainer.jsx",["102"],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/medium/Media.jsx",["103","104"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function Media({media}) {\n  // const { media } = props\n\n  return (\n    <div>\n      <h1>Media</h1>\n      {\n        media.map((medium) => (\n          <React.Fragment key={medium.id}>\n            <Link to={`/media/${medium.id}`}>\n              <h2>{medium.name}</h2>\n              <img src={medium.img_url} />\n            </Link>\n            <>\n              <p>{medium.description}</p>\n            </>\n          </React.Fragment>\n         ))\n      }\n    </div>\n  )\n}",["105","106"],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/medium/MediumDetail.jsx",["107"],"import React, { useState, useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { getOneMedium } from '../../services/media'\nimport PostCreate from '../post/PostCreate';\nimport PostDetail from '../post/PostDetail'\n\nexport default function MediumDetail(props) {\n  const [medium, setMedium] = useState(null);\n  const [createPost, setCreatePost] = useState(false);\n  const [updated, setUpdated] = useState(false)\n  const { id } = useParams();\n  const { loggedInUser } = props;\n\n\n\n  useEffect(() => {\n    const fetchMedium = async () => {\n      const mediumData = await getOneMedium(id);\n      setMedium(mediumData);\n    }\n    fetchMedium(id);\n  }, [id, createPost, updated])\n\n\n  return (\n    <>{!createPost ?\n      <>\n        <h1>{medium?.name}</h1>\n        <h2 onClick={() => setCreatePost(!createPost)}>post to {medium?.name}</h2>\n        {medium?.posts.map((post) => (\n          <PostDetail\n            updated={updated}\n            setUpdated={setUpdated}\n            loggedInUser={loggedInUser}\n            key={post.id}\n            post={post} />\n        ))}\n      </>\n      :\n      <PostCreate\n        loggedInUser={loggedInUser}\n        createPost={createPost}\n        setCreatePost={setCreatePost}\n        medium={medium}\n        mediumId={id} />\n    }\n    </>\n  )\n}","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/post/PostCreate.jsx",[],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/services/media.js",["108"],"import api from './apiConfig'\n\nexport const getAllMedia = async () => {\n  const resp = await api.get('/media');\n  return resp.data;\n}\n\nexport const getOneMedium = async (id) => {\n  const resp = await api.get(`/media/${id}`);\n  return resp.data;\n}\n\nexport const addMedium = async (mediumId, userId) => {\n  const resp = await api.put(`/media/${mediumId}/users/${userId}`)\n  return resp.data;\n}\n\nexport const removeMediun = async (mediumId, userId) => {\n  const resp = await api.patch(`/media/${mediumId}/users/${userId}`)\n}","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/post/PostDetail.jsx",["109","110","111"],"import { useState, useEffect, useReducer } from 'react';\nimport { getOneUser } from '../../services/users';\nimport PostEdit from './PostEdit';\n\nexport default function PostDetail(props) {\n  const { post, loggedInUser, updated, setUpdated } = props;\n  const [editPost, setEditPost] = useState(false);\n  const [user, setUser] = useState('');\n\n\n\n  const updateCreatedAt = (str) => {\n    let newStr = str.split('').splice(0, 10).join('').split('-').reverse()\n    return newStr.map(item => item.charAt(0) === '0' ? item.slice(1) : item).join('/')\n  }\n\n  useEffect(() => {\n    const fetchUser = async (id) => {\n      const user = await (getOneUser(id));\n      setUser(user.username)\n    }\n    fetchUser(post.user_id)\n  }, [editPost])\n\n\n  return (\n    <>\n      {!editPost ?\n        <div>\n          {loggedInUser?.id == post.user_id ?\n            <p onClick={() => setEditPost(!editPost)}>Edit</p>\n            :\n            <> </>\n          }\n          <h3>{post.subject}</h3>\n          <h4>{user}</h4>\n          <p>{post.content}</p>\n          <p>posted: {updateCreatedAt(post.created_at)}</p>\n        </div>\n        :\n        <PostEdit\n          editPost={editPost}\n          setEditPost={setEditPost}\n          post={post}\n          updated={updated}\n          setUpdated={setUpdated}\n        />\n      }\n    </>\n  )\n}\n","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/post/PostEdit.jsx",[],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/services/posts.js",["112","113","114"],"import api from './apiConfig'\n\nexport const getAllPosts = async (mediumId) => {\n  const resp = await api.get(`/media/${mediumId}/posts/`);\n}\n\nexport const getOnePost = async (id) => {\n  const resp = await api.get(`/posts/${id}`)\n}\n\nexport const addPost = async (mediumId, postData) => {\n  const resp = await api.post(`/media/${mediumId}/posts/`, { post: postData })\n  return resp.data\n}\n\nexport const putPost = async (id, postData) => {\n  const resp = await api.put(`/posts/${id}`, {post: postData})\n}\n\nexport const destroyPost = async (id) => {\n  const resp = await api.delete(`posts/${id}`);\n  return resp;\n}","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/medium/MediumRequest.jsx",[],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/services/users.js",[],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/services/auth.js",[],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/user/Profile.jsx",["115"],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/components/Layout.jsx",[],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/stylesheets/ProfileStyles.js",[],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/user/ProfileEdit.jsx",["116"],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/index.js",[],{"ruleId":"117","severity":1,"message":"118","line":7,"column":31,"nodeType":"119","messageId":"120","endLine":7,"endColumn":41},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"121","replacedBy":"125"},{"ruleId":"123","replacedBy":"126"},{"ruleId":"117","severity":1,"message":"127","line":1,"column":20,"nodeType":"119","messageId":"120","endLine":1,"endColumn":29},{"ruleId":"117","severity":1,"message":"128","line":4,"column":11,"nodeType":"119","messageId":"120","endLine":4,"endColumn":16},{"ruleId":"117","severity":1,"message":"129","line":10,"column":10,"nodeType":"119","messageId":"120","endLine":10,"endColumn":15},{"ruleId":"117","severity":1,"message":"130","line":1,"column":17,"nodeType":"119","messageId":"120","endLine":1,"endColumn":25},{"ruleId":"131","severity":1,"message":"132","line":15,"column":15,"nodeType":"133","endLine":15,"endColumn":43},{"ruleId":"121","replacedBy":"134"},{"ruleId":"123","replacedBy":"135"},{"ruleId":"117","severity":1,"message":"136","line":2,"column":10,"nodeType":"119","messageId":"120","endLine":2,"endColumn":14},{"ruleId":"117","severity":1,"message":"137","line":19,"column":9,"nodeType":"119","messageId":"120","endLine":19,"endColumn":13},{"ruleId":"117","severity":1,"message":"138","line":1,"column":31,"nodeType":"119","messageId":"120","endLine":1,"endColumn":41},{"ruleId":"139","severity":1,"message":"140","line":23,"column":6,"nodeType":"141","endLine":23,"endColumn":16,"suggestions":"142"},{"ruleId":"143","severity":1,"message":"144","line":30,"column":29,"nodeType":"145","messageId":"146","endLine":30,"endColumn":31},{"ruleId":"117","severity":1,"message":"137","line":4,"column":9,"nodeType":"119","messageId":"120","endLine":4,"endColumn":13},{"ruleId":"117","severity":1,"message":"137","line":8,"column":9,"nodeType":"119","messageId":"120","endLine":8,"endColumn":13},{"ruleId":"117","severity":1,"message":"137","line":17,"column":9,"nodeType":"119","messageId":"120","endLine":17,"endColumn":13},{"ruleId":"117","severity":1,"message":"127","line":1,"column":27,"nodeType":"119","messageId":"120","endLine":1,"endColumn":36},{"ruleId":"117","severity":1,"message":"127","line":1,"column":20,"nodeType":"119","messageId":"120","endLine":1,"endColumn":29},"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","no-native-reassign",["147"],"no-negated-in-lhs",["148"],["147"],["148"],"'useEffect' is defined but never used.","'media' is assigned a value but never used.","'posts' is assigned a value but never used.","'useState' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["147"],["148"],"'Link' is defined but never used.","'resp' is assigned a value but never used.","'useReducer' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'post.user_id'. Either include it or remove the dependency array.","ArrayExpression",["149"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"150","fix":"151"},"Update the dependencies array to be: [editPost, post.user_id]",{"range":"152","text":"153"},[716,726],"[editPost, post.user_id]"]