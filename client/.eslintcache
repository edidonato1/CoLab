[{"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/medium/MediumDetail.jsx":"1","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/post/PostCreate.jsx":"2","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/post/PostEdit.jsx":"3","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/post/PostDetail.jsx":"4","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/stylesheets/MediumStyles.js":"5","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/medium/Media.jsx":"6","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/stylesheets/MediaStyles.js":"7","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/stylesheets/UserAside.js":"8","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/components/UserAside.jsx":"9","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/stylesheets/FormStyles.js":"10","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/stylesheets/Home.js":"11","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/stylesheets/Layout.js":"12","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/components/Header.jsx":"13","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/App.jsx":"14","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/user/Profile.jsx":"15","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/stylesheets/ProfileStyles.js":"16","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/components/ProfileAside.jsx":"17","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/user/ProfileEdit.jsx":"18","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/services/media.js":"19","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/containers/MediumContainer.jsx":"20","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/user/Register.jsx":"21","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/medium/MediumRequest.jsx":"22","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/index.js":"23","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/services/auth.js":"24","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/user/Login.jsx":"25","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/Home.jsx":"26","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/services/apiConfig.js":"27","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/services/posts.js":"28","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/services/users.js":"29","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/components/Layout.jsx":"30"},{"size":2397,"mtime":1607034184037,"results":"31","hashOfConfig":"32"},{"size":1704,"mtime":1607045867787,"results":"33","hashOfConfig":"32"},{"size":2139,"mtime":1606969457577,"results":"34","hashOfConfig":"32"},{"size":1842,"mtime":1607032941327,"results":"35","hashOfConfig":"32"},{"size":2922,"mtime":1607045554623,"results":"36","hashOfConfig":"32"},{"size":2243,"mtime":1607090852921,"results":"37","hashOfConfig":"32"},{"size":2444,"mtime":1607090941451,"results":"38","hashOfConfig":"32"},{"size":1160,"mtime":1607046584813,"results":"39","hashOfConfig":"32"},{"size":1174,"mtime":1607046431631,"results":"40","hashOfConfig":"32"},{"size":1131,"mtime":1607045900483,"results":"41","hashOfConfig":"32"},{"size":1115,"mtime":1607024339642,"results":"42","hashOfConfig":"32"},{"size":1583,"mtime":1607034701713,"results":"43","hashOfConfig":"32"},{"size":1340,"mtime":1607091361239,"results":"44","hashOfConfig":"32"},{"size":2530,"mtime":1607046224959,"results":"45","hashOfConfig":"32"},{"size":2684,"mtime":1607052476466,"results":"46","hashOfConfig":"32"},{"size":3683,"mtime":1607045389874,"results":"47","hashOfConfig":"32"},{"size":1288,"mtime":1607035248248,"results":"48","hashOfConfig":"32"},{"size":4315,"mtime":1607045357328,"results":"49","hashOfConfig":"32"},{"size":522,"mtime":1607021206244,"results":"50","hashOfConfig":"32"},{"size":993,"mtime":1606945276533,"results":"51","hashOfConfig":"32"},{"size":1883,"mtime":1606937114306,"results":"52","hashOfConfig":"32"},{"size":2309,"mtime":1606937440334,"results":"53","hashOfConfig":"32"},{"size":590,"mtime":1606784343017,"results":"54","hashOfConfig":"32"},{"size":935,"mtime":1606776533426,"results":"55","hashOfConfig":"32"},{"size":1213,"mtime":1606937109922,"results":"56","hashOfConfig":"32"},{"size":789,"mtime":1606930434992,"results":"57","hashOfConfig":"32"},{"size":139,"mtime":1606776515671,"results":"58","hashOfConfig":"32"},{"size":610,"mtime":1606860908104,"results":"59","hashOfConfig":"32"},{"size":275,"mtime":1606777732439,"results":"60","hashOfConfig":"32"},{"size":263,"mtime":1606930833530,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1xm85ty",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"87"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/medium/MediumDetail.jsx",[],["132","133"],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/post/PostCreate.jsx",[],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/post/PostEdit.jsx",["134"],"import { useState } from 'react';\nimport { putPost, destroyPost } from '../../services/posts';\n\n\nexport default function PostCreate(props) {\n  const { post, updated, setUpdated,  editPost, setEditPost, user, updateCreatedAt } = props\n  const [formData, setFormData] = useState({\n    subject: post.subject,\n    content: post.content,\n    user_id: post.user_id,\n    medium_id: post.medium_id\n  })\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value\n    }))\n  }\n\n  const handleSubmit = async (id, formData) => {\n    await putPost(id, formData);\n    setEditPost(!editPost);\n    setUpdated(!updated);\n  }\n\n  const handleDelete = async (id) => {\n    await destroyPost(id)\n    setUpdated(!updated)\n  }\n\n  return (\n    <>\n      <div className=\"post\">\n        <form onSubmit={(e) => {\n          e.preventDefault();\n          handleSubmit(post.id, formData)\n        }}>\n          <div className=\"post-top\">\n            <div className=\"user-info\">\n              <img id=\"user-pic\" src={user.img_url ? user.img_url : \"https://images.unsplash.com/photo-1439436556258-1f7fab1bfd4f?ixid=MXwxMjA3fDB8MHxzZWFyY2h8MXx8YW5pbWF0aW9ufGVufDB8fDB8&ixlib=rb-1.2.1&auto=format&fit=crop&w=700&q=60\"} alt={user.username} />\n              <h4>{user.username}</h4>\n            </div>\n            <input\n              className=\"edit-input\"\n              type=\"text\"\n              name=\"subject\"\n              value={formData.subject}\n              onChange={handleChange}\n              id=\"subject\"\n            />\n            <h6 onClick={() => setEditPost(!editPost)}>Cancel</h6>\n          </div>\n          <div id=\"content\">\n            <textarea\n              id=\"edit-textarea\"\n              type=\"text\"\n              name=\"content\"\n              value={formData.content}\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"button-box\">\n            <button id=\"delete\" onClick={() => handleDelete(post.id)}>erase</button>\n            <button type=\"submit\">save</button>\n          </div>\n        </form>\n      </div>\n    </>\n  )\n}","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/post/PostDetail.jsx",["135","136"],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/stylesheets/MediumStyles.js",[],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/medium/Media.jsx",["137"],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/stylesheets/MediaStyles.js",[],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/stylesheets/UserAside.js",[],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/components/UserAside.jsx",["138"],"import { useState, useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom'\nimport UserAsideStyles from '../stylesheets/UserAside';\n\n\nexport default function UserAside(props) {\n  const [mediumLink, setMediumLink] = useState(null);\n  const history = useHistory();\n\n  const { loggedInUser, media } = props;\n\n\n  // navigate using select menu\n  if (mediumLink) {\n    setMediumLink(null)\n    history.push(`/media/${mediumLink}`)\n}\n\n  return (\n    <UserAsideStyles>\n      <h1><Link to=\"/profile\" >{loggedInUser?.username}</Link></h1>\n      <div className=\"user-media\">\n        <h4>your media</h4>\n        <ul>\n        {loggedInUser?.media.map(medium => \n          <Link to={`/media/${medium.id}`} ><li>{medium.name}</li></Link>\n          )}\n        </ul>\n\n        <select\n          defaultValue='default'\n          name='media'\n          onChange={(e) => setMediumLink(e.target.value)}\n            >\n            <option disabled value='default' >browse media</option>\n            {media?.map(medium =>\n            <option value={medium.id} key={medium.id}>{medium.name}</option>\n            )}\n          </select>\n      \n\n      </div>\n  </UserAsideStyles>\n)\n}","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/stylesheets/FormStyles.js",[],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/stylesheets/Home.js",[],["139","140"],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/stylesheets/Layout.js",[],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/components/Header.jsx",["141"],"import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFlask, faUser, faPalette, faHome } from '@fortawesome/free-solid-svg-icons';\nimport { Link, NavLink } from 'react-router-dom';\n\nimport LayoutStyled from '../stylesheets/Layout'\n\nexport default function Header() {\n\n  return (\n    <div className=\"header\">\n      <div className=\"logo\">\n        <Link to=\"/\" className=\"nav-logo\"> C o L <FontAwesomeIcon icon={faFlask} /> b </Link>\n      </div>\n      <nav>\n        <div className=\"icon-box\">\n          <NavLink\n            to=\"/media\"\n            className=\"nav-icon\"\n            activeStyle={{\n              fontSize: \"33px\",\n              color: \"#F9EAE7\"\n            }}><FontAwesomeIcon icon={faPalette} /></NavLink>\n        </div>\n        <div className=\"icon-box\">\n          <NavLink\n            exact to=\"/\"\n            className=\"nav-icon\"\n            activeStyle={{\n              fontSize: \"33px\",\n              color: \"#F9EAE7\"\n            }}><FontAwesomeIcon icon={faHome} /></NavLink>\n        </div>\n        <div className=\"icon-box\">\n          <NavLink\n            to=\"/profile\"\n            className=\"nav-icon\"\n            activeStyle={{\n              fontSize: \"33px\",\n              color: \"#F9EAE7\"\n            }}><FontAwesomeIcon icon={faUser} /></NavLink>\n        </div>\n      </nav>\n\n    </div>\n  )\n}","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/App.jsx",["142"],"import Home from './screens/Home';\nimport Layout from './components/Layout';\nimport Login from './screens/user/Login';\nimport Register from './screens/user/Register';\nimport MediumContainer from './containers/MediumContainer'\nimport Profile from './screens/user/Profile';\n\nimport { useEffect, useState, useContext } from 'react';\nimport { Route, Switch, useHistory } from 'react-router-dom';\nimport { getAllMedia } from './services/media'\nimport { verifyUser, loginUser, registerUser, removeToken } from './services/auth';\nimport './App.css';\n\n\nfunction App() {\n  const [loggedInUser, setLoggedInUser] = useState(null)\n  const [media, setMedia] = useState([])\n  const [updated, setUpdated] = useState(false)\n\n  const history = useHistory();\n\n\n  useEffect(() => {\n    const handleVerify = async () => {\n      const userData = await verifyUser();\n      setLoggedInUser(userData)\n    }\n    handleVerify();\n  }, [updated])\n\n  useEffect(() => {\n    const fetchMedia = async () => {\n      const mediaData = await getAllMedia();\n      setMedia(mediaData.sort((a, b) => {\n        let textA = a.name.toUpperCase();\n        let textB = b.name.toUpperCase();\n        return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;\n      }));\n    }\n    fetchMedia();\n  }, [])\n\n  const handleLogin = async (loginData) => {\n    const userData = await loginUser(loginData);\n    setLoggedInUser(userData);\n    history.push('/');\n  }\n\n  const handleRegister = async (registerData) => {\n    const userData = await registerUser(registerData);\n    setLoggedInUser(userData)\n    history.push('/');\n  }\n\n  const handleLogout = async () => {\n    setLoggedInUser(null);\n    localStorage.removeItem('authToken')\n    removeToken();\n    history.push('/')\n  }\n\n  return (\n    <Layout\n      loggedInUser={loggedInUser}\n      handleLogout={handleLogout}\n    >\n      <Switch>\n        <Route exact path='/' component={Home} />\n        <Route path='/login' >\n          <Login handleLogin={handleLogin} />\n        </Route>\n        <Route path='/register'>\n          <Register handleRegister={handleRegister} />\n        </Route>\n        <Route path='/profile'>\n          <Profile\n            updated={updated}\n            setUpdated={setUpdated}\n            media={media}\n            loggedInUser={loggedInUser}\n            handleLogout={handleLogout} />\n        </Route>\n        <Route path='/media' >\n          <MediumContainer\n            media={media}\n            loggedInUser={loggedInUser} />\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/user/Profile.jsx",["143","144","145","146"],"import React, { useState, useEffect } from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport ProfileEdit from '../../screens/user/ProfileEdit';\nimport ProfileAside from '../../components/ProfileAside';\nimport ProfileStyles from '../../stylesheets/ProfileStyles';\n\nimport flask from '../../assets/icons/images/flask.png'\n\n\nexport default function Profile(props) {\n  const [editProfile, setEditProfile] = useState(false)\n  const [dashVersion, setDashVersion] = useState('')\n  const { updated, setUpdated } = props\n\n  const { loggedInUser, media, handleLogout } = props;\n\n  const handler = () => {\n    window.innerWidth <= 600 ? setDashVersion('mobile') : setDashVersion('web')\n  }\n\n  useEffect(() => {\n    handler();\n    window.addEventListener(\"resize\", handler);\n    return () => window.removeEventListener(\"resize\", handler)\n  }, [])\n\n\n  if (!loggedInUser) {\n    return (<Redirect to=\"/\" />)\n  }\n\n\n  return (\n    <>\n      {\n        editProfile\n          ?\n          <ProfileEdit\n            dashVersion={dashVersion}\n            updated={updated}\n            setUpdated={setUpdated}\n            setEditProfile={setEditProfile}\n            media={media}\n            loggedInUser={loggedInUser} />\n          :\n          <React.Fragment>\n            <ProfileStyles >\n              <aside className=\"side-bar\">\n                <h1 id=\"profile-title\">your profile</h1>\n                <ProfileAside\n                  media={media}\n                  loggedInUser={loggedInUser}\n                  handleLogout={handleLogout}\n                  editProfile={editProfile}\n                  setEditProfile={setEditProfile} />\n              </aside>\n              {\n                dashVersion === 'web'\n                  ?\n                  <div className=\"dash-parent\">\n                    <h2>dashboard</h2>\n                    <div className=\"dashboard\">\n                      <div className=\"dash-photo-box\">\n                        <div className=\"photo-box-top\">\n                          <img id=\"top-left\" src={loggedInUser.media[0] ? loggedInUser.media[0].img_url : flask} />\n                          <img id=\"top-right\" src={loggedInUser.media[1] ? loggedInUser.media[1].img_url : flask} />\n                        </div>\n                        <div className=\"photo-box-bottom\">\n                          <img id=\"bottom\" src={loggedInUser.media[2] ? loggedInUser.media[2].img_url : flask} />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  :\n                  <>\n                  </>\n              }\n            </ProfileStyles>\n          </React.Fragment>\n      }\n    </>\n  )\n}\n\n","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/stylesheets/ProfileStyles.js",[],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/components/ProfileAside.jsx",["147","148"],"import { useState, useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom'\nimport UserAsideStyles from '../stylesheets/UserAside';\n\n\nexport default function ProfileAside(props) {\n  const [mediumLink, setMediumLink] = useState(null);\n  const history = useHistory();\n\n  const { loggedInUser, handleLogout, editProfile, setEditProfile } = props;\n\n\n  if (mediumLink) {\n    setMediumLink(null)\n    history.push(`/media/${mediumLink}`)\n  }\n\n  return (\n    <UserAsideStyles>\n      <div className=\"profile-title\">\n        <h1>{loggedInUser?.username}</h1>\n        <img className=\"profile-pic\" src={loggedInUser?.img_url ? loggedInUser.img_url : `https://images.unsplash.com/photo-1569172122301-bc5008bc09c5?ixid=MXwxMjA3fDB8MHxzZWFyY2h8Mnx8YXJ0fGVufDB8fDB8&ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=60`} />\n      </div>\n      <div className=\"user-media\">\n        <h4>your media</h4>\n        <ul>\n          {loggedInUser?.media.map(medium =>\n            <Link to={`/media/${medium.id}`} ><li>{medium.name}</li></Link>\n          )}\n        </ul>\n        <div className=\"button-box\">\n          <button onClick={() => setEditProfile(!editProfile)}>edit</button>\n          <button onClick={handleLogout}>log out</button>\n        </div>\n      </div>\n    </UserAsideStyles>\n  )\n}","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/user/ProfileEdit.jsx",["149","150","151"],"import { useState, useParams } from 'react';\nimport ProfileStyles from '../../stylesheets/ProfileStyles';\nimport { addMedium, removeMedium } from '../../services/media';\nimport { putUser } from '../../services/users';\n\nexport default function ProfileEdit(props) {\n  const { media, loggedInUser, setEditProfile, updated, setUpdated, dashVersion } = props;\n\n  const [newMedium, setNewMedium] = useState({})\n  const [formData, setFormData] = useState({\n    username: loggedInUser.username,\n    img_url: loggedInUser.img_url,\n    bio: loggedInUser.bio,\n    password: ''\n  })\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value\n    }))\n  }\n\n  const handleSubmit = async (id, data) => {\n    await putUser(id, data);\n    setEditProfile(false)\n    setUpdated(!updated)\n  }\n\n  const handleAddMedium = async (e) => {\n    e.preventDefault();\n    if (loggedInUser.media.length <= 4) {\n      await addMedium(newMedium, loggedInUser.id)\n      setUpdated(!updated)\n    }\n  }\n\n  const handleRemoveMedium = async (mediumId, userId) => {\n    await removeMedium(mediumId, userId);\n    setUpdated(!updated);\n  }\n\n  const goBack = `<< back`\n\n  return (\n    <ProfileStyles>\n      {dashVersion !== 'web' ?\n        <div className=\"mobile-edit-title\">\n          <img className=\"profile-pic\" src={loggedInUser?.img_url} />\n          <h2 id=\"update-title\">edit profile</h2>\n        </div>\n        :\n        <h2 id=\"update-title\">edit profile</h2>\n      }\n      <p className=\"go-back\" onClick={() => setEditProfile(false)}>{goBack}</p>\n      <div className=\"edit-profile-main\">\n        <form onSubmit={(e) => {\n          e.preventDefault();\n          handleSubmit(loggedInUser.id, formData)\n        }}>\n          <div className=\"edit-left\">\n            {dashVersion !== 'web' ? <h5>your info</h5> :\n              <img className=\"profile-pic\" src={loggedInUser?.img_url} />}\n            <label> image url\n             <input\n                type='text'\n                name='img_url'\n                value={formData.img_url}\n                onChange={handleChange}\n              />\n            </label>\n            <label> username\n              <input\n                type='text'\n                name='username'\n                value={formData.username}\n                onChange={handleChange}\n              />\n            </label>\n            <label> password\n              <input\n                type='password'\n                name='password'\n                value={formData.password}\n                placeholder=\"required\"\n                onChange={handleChange}\n                required\n              />\n            </label>\n          </div>\n          <div className=\"edit-mid\">\n            <label htmlFor=\"bio\"> bio\n              <textarea\n                type='text'\n                name='bio'\n                value={formData.bio}\n                onChange={handleChange}\n              />\n            </label>\n            <div className=\"button-box\">\n              <button className=\"profile-update\" type=\"submit\">save</button>\n            </div>\n          </div>\n        </form>\n        <form\n          className=\"edit-right\"\n          onSubmit={handleAddMedium}>\n          <div className=\"media-edit\">\n            <h5>your media</h5>\n            <ul>\n              {loggedInUser?.media.map(medium =>\n                <div className=\"medium-list\"> <li value={medium.id}>{medium.name}</li>\n                  <small\n                    onClick={(e) => {\n                      e.preventDefault();\n                      handleRemoveMedium(medium.id, loggedInUser.id)\n                    }}>remove</small></div>\n              )}\n            </ul>\n          </div>\n          <select\n            defaultValue='default'\n            name='media'\n            value={formData.media}\n            onChange={(e) => setNewMedium(e.target.value)}>\n            <option disabled value='default'>add a medium</option>\n            {media?.map(medium =>\n              <option value={medium.id} key={medium.id}>{medium.name}</option>\n            )}\n          </select>\n          <div className=\"button-box\" id=\"update\">\n            <button className=\"profile-update\" type=\"submit\">add</button>\n          </div>\n        </form>\n      </div>\n    </ProfileStyles>\n  )\n}\n\n","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/services/media.js",["152"],"import api from './apiConfig'\n\nexport const getAllMedia = async () => {\n  const resp = await api.get('/media');\n  return resp.data;\n}\n\nexport const getOneMedium = async (id) => {\n  const resp = await api.get(`/media/${id}`);\n  return resp.data;\n}\n\nexport const addMedium = async (mediumId, userId) => {\n  const resp = await api.put(`/media/${mediumId}/users/${userId}`)\n  return resp.data;\n}\n\nexport const removeMedium = async (mediumId, userId) => {\n  const resp = await api.patch(`/media/${mediumId}/users/${userId}`)\n}\n","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/containers/MediumContainer.jsx",["153"],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/user/Register.jsx",["154","155"],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/medium/MediumRequest.jsx",[],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/index.js",[],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/services/auth.js",[],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/user/Login.jsx",[],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/Home.jsx",[],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/services/apiConfig.js",[],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/services/posts.js",["156","157","158"],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/services/users.js",[],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/components/Layout.jsx",[],{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","severity":1,"message":"164","line":6,"column":68,"nodeType":"165","messageId":"166","endLine":6,"endColumn":83},{"ruleId":"167","severity":1,"message":"168","line":23,"column":6,"nodeType":"169","endLine":23,"endColumn":16,"suggestions":"170"},{"ruleId":"171","severity":1,"message":"172","line":36,"column":31,"nodeType":"173","messageId":"174","endLine":36,"endColumn":33},{"ruleId":"175","severity":1,"message":"176","line":51,"column":21,"nodeType":"177","endLine":51,"endColumn":49},{"ruleId":"163","severity":1,"message":"178","line":1,"column":20,"nodeType":"165","messageId":"166","endLine":1,"endColumn":29},{"ruleId":"159","replacedBy":"179"},{"ruleId":"161","replacedBy":"180"},{"ruleId":"163","severity":1,"message":"181","line":5,"column":8,"nodeType":"165","messageId":"166","endLine":5,"endColumn":20},{"ruleId":"163","severity":1,"message":"182","line":8,"column":31,"nodeType":"165","messageId":"166","endLine":8,"endColumn":41},{"ruleId":"163","severity":1,"message":"183","line":2,"column":20,"nodeType":"165","messageId":"166","endLine":2,"endColumn":24},{"ruleId":"175","severity":1,"message":"176","line":65,"column":27,"nodeType":"177","endLine":65,"endColumn":116},{"ruleId":"175","severity":1,"message":"176","line":66,"column":27,"nodeType":"177","endLine":66,"endColumn":117},{"ruleId":"175","severity":1,"message":"176","line":69,"column":27,"nodeType":"177","endLine":69,"endColumn":114},{"ruleId":"163","severity":1,"message":"178","line":1,"column":20,"nodeType":"165","messageId":"166","endLine":1,"endColumn":29},{"ruleId":"175","severity":1,"message":"176","line":22,"column":9,"nodeType":"177","endLine":22,"endColumn":253},{"ruleId":"163","severity":1,"message":"184","line":1,"column":20,"nodeType":"165","messageId":"166","endLine":1,"endColumn":29},{"ruleId":"175","severity":1,"message":"176","line":50,"column":11,"nodeType":"177","endLine":50,"endColumn":70},{"ruleId":"175","severity":1,"message":"176","line":64,"column":15,"nodeType":"177","endLine":64,"endColumn":74},{"ruleId":"163","severity":1,"message":"185","line":19,"column":9,"nodeType":"165","messageId":"166","endLine":19,"endColumn":13},{"ruleId":"163","severity":1,"message":"186","line":10,"column":10,"nodeType":"165","messageId":"166","endLine":10,"endColumn":15},{"ruleId":"163","severity":1,"message":"178","line":1,"column":20,"nodeType":"165","messageId":"166","endLine":1,"endColumn":29},{"ruleId":"163","severity":1,"message":"187","line":6,"column":11,"nodeType":"165","messageId":"166","endLine":6,"endColumn":16},{"ruleId":"163","severity":1,"message":"185","line":4,"column":9,"nodeType":"165","messageId":"166","endLine":4,"endColumn":13},{"ruleId":"163","severity":1,"message":"185","line":8,"column":9,"nodeType":"165","messageId":"166","endLine":8,"endColumn":13},{"ruleId":"163","severity":1,"message":"185","line":17,"column":9,"nodeType":"165","messageId":"166","endLine":17,"endColumn":13},"no-native-reassign",["188"],"no-negated-in-lhs",["189"],"no-unused-vars","'updateCreatedAt' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'post.user_id'. Either include it or remove the dependency array.","ArrayExpression",["190"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.",["188"],["189"],"'LayoutStyled' is defined but never used.","'useContext' is defined but never used.","'Link' is defined but never used.","'useParams' is defined but never used.","'resp' is assigned a value but never used.","'posts' is assigned a value but never used.","'media' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"191","fix":"192"},"Update the dependencies array to be: [editPost, post.user_id]",{"range":"193","text":"194"},[695,705],"[editPost, post.user_id]"]