[{"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/App.jsx":"1","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/user/Login.jsx":"2","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/Home.jsx":"3","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/user/Register.jsx":"4","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/services/apiConfig.js":"5","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/containers/MediumContainer.jsx":"6","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/medium/Media.jsx":"7","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/medium/MediumDetail.jsx":"8","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/post/PostCreate.jsx":"9","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/services/media.js":"10","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/post/PostDetail.jsx":"11","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/post/PostEdit.jsx":"12","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/services/posts.js":"13","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/medium/MediumRequest.jsx":"14","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/services/users.js":"15","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/services/auth.js":"16","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/user/Profile.jsx":"17","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/components/Layout.jsx":"18","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/stylesheets/ProfileStyles.js":"19"},{"size":1918,"mtime":1606869311113,"results":"20","hashOfConfig":"21"},{"size":993,"mtime":1606835714476,"results":"22","hashOfConfig":"21"},{"size":396,"mtime":1606787434425,"results":"23","hashOfConfig":"21"},{"size":1462,"mtime":1606836882465,"results":"24","hashOfConfig":"21"},{"size":139,"mtime":1606776515671,"results":"25","hashOfConfig":"21"},{"size":1137,"mtime":1606863222053,"results":"26","hashOfConfig":"21"},{"size":562,"mtime":1606861751378,"results":"27","hashOfConfig":"21"},{"size":1303,"mtime":1606861323668,"results":"28","hashOfConfig":"21"},{"size":1328,"mtime":1606857084455,"results":"29","hashOfConfig":"21"},{"size":521,"mtime":1606830593004,"results":"30","hashOfConfig":"21"},{"size":1313,"mtime":1606861421122,"results":"31","hashOfConfig":"21"},{"size":1353,"mtime":1606861398596,"results":"32","hashOfConfig":"21"},{"size":610,"mtime":1606860908104,"results":"33","hashOfConfig":"21"},{"size":2068,"mtime":1606863473043,"results":"34","hashOfConfig":"21"},{"size":275,"mtime":1606777732439,"results":"35","hashOfConfig":"21"},{"size":935,"mtime":1606776533426,"results":"36","hashOfConfig":"21"},{"size":413,"mtime":1606870911867,"results":"37","hashOfConfig":"21"},{"size":105,"mtime":1606869238887,"results":"38","hashOfConfig":"21"},{"size":467,"mtime":1606870881893,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1xm85ty",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/App.jsx",["86","87"],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/user/Login.jsx",[],["88","89"],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/Home.jsx",[],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/user/Register.jsx",[],["90","91"],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/services/apiConfig.js",[],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/containers/MediumContainer.jsx",["92","93"],"import { useState, useEffect } from 'react';\nimport { Switch, Route, useHistory } from 'react-router-dom';\nimport { getAllMedia } from '../services/media';\nimport { getAllPosts } from '../services/posts';\nimport Media from '../screens/medium/Media';\nimport MediaDetail from '../screens/medium/MediumDetail';\nimport MediumRequest from '../screens/medium/MediumRequest';\n\nexport default function MediumContainer(props) {\n  const [media, setMedia] = useState([]);\n  const [posts, setPosts] = useState([])\n\n  useEffect(() => {\n    const fetchMedia = async () => {\n      const mediaData = await getAllMedia();\n      setMedia(mediaData);\n    }\n    const fetchPosts = async () => {\n      const postData = await getAllPosts();\n      setPosts(postData);\n    }\n    fetchMedia();\n    fetchPosts();\n  }, [])\n\n\n  return (\n    <Switch>\n      <Route path='/media/all'>\n        <Media media={media} />\n      </Route>\n      <Route path='/media/request'>\n        <MediumRequest />\n      </Route>\n      <Route path='/media/:id' >\n        <MediaDetail\n          loggedInUser={props.loggedInUser}\n          media={media} />\n      </Route>\n    </Switch>\n  )\n}","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/medium/Media.jsx",["94","95"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function Media({media}) {\n  // const { media } = props\n\n  return (\n    <div>\n      <h1>Media</h1>\n      {\n        media.map((medium) => (\n          <React.Fragment key={medium.id}>\n            <Link to={`/media/${medium.id}`}>\n              <h2>{medium.name}</h2>\n              <img src={medium.img_url} />\n            </Link>\n            <>\n              <p>{medium.description}</p>\n            </>\n          </React.Fragment>\n         ))\n      }\n    </div>\n  )\n}","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/medium/MediumDetail.jsx",["96"],"import React, { useState, useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { getOneMedium } from '../../services/media'\nimport PostCreate from '../post/PostCreate';\nimport PostDetail from '../post/PostDetail'\n\nexport default function MediumDetail(props) {\n  const [medium, setMedium] = useState(null);\n  const [createPost, setCreatePost] = useState(false);\n  const [updated, setUpdated] = useState(false)\n  const { id } = useParams();\n  const { loggedInUser } = props;\n\n\n\n  useEffect(() => {\n    const fetchMedium = async () => {\n      const mediumData = await getOneMedium(id);\n      setMedium(mediumData);\n    }\n    fetchMedium(id);\n  }, [id, createPost, updated])\n\n\n  return (\n    <>{!createPost ?\n      <>\n        <h1>{medium?.name}</h1>\n        <h2 onClick={() => setCreatePost(!createPost)}>post to {medium?.name}</h2>\n        {medium?.posts.map((post) => (\n          <PostDetail\n            updated={updated}\n            setUpdated={setUpdated}\n            loggedInUser={loggedInUser}\n            key={post.id}\n            post={post} />\n        ))}\n      </>\n      :\n      <PostCreate\n        loggedInUser={loggedInUser}\n        createPost={createPost}\n        setCreatePost={setCreatePost}\n        medium={medium}\n        mediumId={id} />\n    }\n    </>\n  )\n}","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/post/PostCreate.jsx",[],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/services/media.js",["97"],"import api from './apiConfig'\n\nexport const getAllMedia = async () => {\n  const resp = await api.get('/media');\n  return resp.data;\n}\n\nexport const getOneMedium = async (id) => {\n  const resp = await api.get(`/media/${id}`);\n  return resp.data;\n}\n\nexport const addMedium = async (mediumId, userId) => {\n  const resp = await api.put(`/media/${mediumId}/users/${userId}`)\n  return resp.data;\n}\n\nexport const removeMediun = async (mediumId, userId) => {\n  const resp = await api.patch(`/media/${mediumId}/users/${userId}`)\n}","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/post/PostDetail.jsx",["98","99","100"],"import { useState, useEffect, useReducer } from 'react';\nimport { getOneUser } from '../../services/users';\nimport PostEdit from './PostEdit';\n\nexport default function PostDetail(props) {\n  const { post, loggedInUser, updated, setUpdated } = props;\n  const [editPost, setEditPost] = useState(false);\n  const [user, setUser] = useState('');\n\n\n\n  const updateCreatedAt = (str) => {\n    let newStr = str.split('').splice(0, 10).join('').split('-').reverse()\n    return newStr.map(item => item.charAt(0) === '0' ? item.slice(1) : item).join('/')\n  }\n\n  useEffect(() => {\n    const fetchUser = async (id) => {\n      const user = await (getOneUser(id));\n      setUser(user.username)\n    }\n    fetchUser(post.user_id)\n  }, [editPost])\n\n\n  return (\n    <>\n      {!editPost ?\n        <div>\n          {loggedInUser?.id == post.user_id ?\n            <p onClick={() => setEditPost(!editPost)}>Edit</p>\n            :\n            <> </>\n          }\n          <h3>{post.subject}</h3>\n          <h4>{user}</h4>\n          <p>{post.content}</p>\n          <p>posted: {updateCreatedAt(post.created_at)}</p>\n        </div>\n        :\n        <PostEdit\n          editPost={editPost}\n          setEditPost={setEditPost}\n          post={post}\n          updated={updated}\n          setUpdated={setUpdated}\n        />\n      }\n    </>\n  )\n}\n","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/post/PostEdit.jsx",[],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/services/posts.js",["101","102","103"],"import api from './apiConfig'\n\nexport const getAllPosts = async (mediumId) => {\n  const resp = await api.get(`/media/${mediumId}/posts/`);\n}\n\nexport const getOnePost = async (id) => {\n  const resp = await api.get(`/posts/${id}`)\n}\n\nexport const addPost = async (mediumId, postData) => {\n  const resp = await api.post(`/media/${mediumId}/posts/`, { post: postData })\n  return resp.data\n}\n\nexport const putPost = async (id, postData) => {\n  const resp = await api.put(`/posts/${id}`, {post: postData})\n}\n\nexport const destroyPost = async (id) => {\n  const resp = await api.delete(`posts/${id}`);\n  return resp;\n}","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/medium/MediumRequest.jsx",[],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/services/users.js",[],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/services/auth.js",[],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/user/Profile.jsx",["104","105"],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/components/Layout.jsx",[],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/stylesheets/ProfileStyles.js",[],{"ruleId":"106","severity":1,"message":"107","line":7,"column":31,"nodeType":"108","messageId":"109","endLine":7,"endColumn":41},{"ruleId":"110","severity":1,"message":"111","line":27,"column":6,"nodeType":"112","endLine":27,"endColumn":8,"suggestions":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"114","replacedBy":"118"},{"ruleId":"116","replacedBy":"119"},{"ruleId":"106","severity":1,"message":"120","line":2,"column":25,"nodeType":"108","messageId":"109","endLine":2,"endColumn":35},{"ruleId":"106","severity":1,"message":"121","line":11,"column":10,"nodeType":"108","messageId":"109","endLine":11,"endColumn":15},{"ruleId":"106","severity":1,"message":"122","line":1,"column":17,"nodeType":"108","messageId":"109","endLine":1,"endColumn":25},{"ruleId":"123","severity":1,"message":"124","line":15,"column":15,"nodeType":"125","endLine":15,"endColumn":43},{"ruleId":"106","severity":1,"message":"126","line":2,"column":10,"nodeType":"108","messageId":"109","endLine":2,"endColumn":14},{"ruleId":"106","severity":1,"message":"127","line":19,"column":9,"nodeType":"108","messageId":"109","endLine":19,"endColumn":13},{"ruleId":"106","severity":1,"message":"128","line":1,"column":31,"nodeType":"108","messageId":"109","endLine":1,"endColumn":41},{"ruleId":"110","severity":1,"message":"129","line":23,"column":6,"nodeType":"112","endLine":23,"endColumn":16,"suggestions":"130"},{"ruleId":"131","severity":1,"message":"132","line":30,"column":29,"nodeType":"133","messageId":"134","endLine":30,"endColumn":31},{"ruleId":"106","severity":1,"message":"127","line":4,"column":9,"nodeType":"108","messageId":"109","endLine":4,"endColumn":13},{"ruleId":"106","severity":1,"message":"127","line":8,"column":9,"nodeType":"108","messageId":"109","endLine":8,"endColumn":13},{"ruleId":"106","severity":1,"message":"127","line":17,"column":9,"nodeType":"108","messageId":"109","endLine":17,"endColumn":13},{"ruleId":"106","severity":1,"message":"122","line":1,"column":10,"nodeType":"108","messageId":"109","endLine":1,"endColumn":18},{"ruleId":"106","severity":1,"message":"135","line":1,"column":20,"nodeType":"108","messageId":"109","endLine":1,"endColumn":29},"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["136"],"no-native-reassign",["137"],"no-negated-in-lhs",["138"],["137"],["138"],"'useHistory' is defined but never used.","'posts' is assigned a value but never used.","'useState' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Link' is defined but never used.","'resp' is assigned a value but never used.","'useReducer' is defined but never used.","React Hook useEffect has a missing dependency: 'post.user_id'. Either include it or remove the dependency array.",["139"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useEffect' is defined but never used.",{"desc":"140","fix":"141"},"no-global-assign","no-unsafe-negation",{"desc":"142","fix":"143"},"Update the dependencies array to be: [history]",{"range":"144","text":"145"},"Update the dependencies array to be: [editPost, post.user_id]",{"range":"146","text":"147"},[827,829],"[history]",[716,726],"[editPost, post.user_id]"]