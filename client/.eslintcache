[{"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/App.jsx":"1","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/user/Login.jsx":"2","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/Home.jsx":"3","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/user/Register.jsx":"4","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/services/apiConfig.js":"5","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/containers/MediumContainer.jsx":"6","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/medium/Media.jsx":"7","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/medium/MediumDetail.jsx":"8","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/post/PostCreate.jsx":"9","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/services/media.js":"10","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/post/PostDetail.jsx":"11","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/post/PostEdit.jsx":"12","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/services/posts.js":"13","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/medium/MediumRequest.jsx":"14","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/services/users.js":"15","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/services/auth.js":"16","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/user/Profile.jsx":"17","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/components/Layout.jsx":"18","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/stylesheets/ProfileStyles.js":"19"},{"size":2208,"mtime":1606873158885,"results":"20","hashOfConfig":"21"},{"size":993,"mtime":1606835714476,"results":"22","hashOfConfig":"21"},{"size":396,"mtime":1606787434425,"results":"23","hashOfConfig":"21"},{"size":1991,"mtime":1606873077811,"results":"24","hashOfConfig":"21"},{"size":139,"mtime":1606776515671,"results":"25","hashOfConfig":"21"},{"size":931,"mtime":1606873306306,"results":"26","hashOfConfig":"21"},{"size":562,"mtime":1606861751378,"results":"27","hashOfConfig":"21"},{"size":1303,"mtime":1606861323668,"results":"28","hashOfConfig":"21"},{"size":1328,"mtime":1606857084455,"results":"29","hashOfConfig":"21"},{"size":521,"mtime":1606830593004,"results":"30","hashOfConfig":"21"},{"size":1313,"mtime":1606861421122,"results":"31","hashOfConfig":"21"},{"size":1353,"mtime":1606861398596,"results":"32","hashOfConfig":"21"},{"size":610,"mtime":1606860908104,"results":"33","hashOfConfig":"21"},{"size":2068,"mtime":1606863473043,"results":"34","hashOfConfig":"21"},{"size":275,"mtime":1606777732439,"results":"35","hashOfConfig":"21"},{"size":935,"mtime":1606776533426,"results":"36","hashOfConfig":"21"},{"size":742,"mtime":1606872449724,"results":"37","hashOfConfig":"21"},{"size":105,"mtime":1606869238887,"results":"38","hashOfConfig":"21"},{"size":482,"mtime":1606872162765,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1xm85ty",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/App.jsx",["84","85"],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/user/Login.jsx",[],["86","87"],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/Home.jsx",[],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/user/Register.jsx",[],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/services/apiConfig.js",[],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/containers/MediumContainer.jsx",["88"],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/medium/Media.jsx",["89","90"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function Media({media}) {\n  // const { media } = props\n\n  return (\n    <div>\n      <h1>Media</h1>\n      {\n        media.map((medium) => (\n          <React.Fragment key={medium.id}>\n            <Link to={`/media/${medium.id}`}>\n              <h2>{medium.name}</h2>\n              <img src={medium.img_url} />\n            </Link>\n            <>\n              <p>{medium.description}</p>\n            </>\n          </React.Fragment>\n         ))\n      }\n    </div>\n  )\n}","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/medium/MediumDetail.jsx",["91"],"import React, { useState, useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { getOneMedium } from '../../services/media'\nimport PostCreate from '../post/PostCreate';\nimport PostDetail from '../post/PostDetail'\n\nexport default function MediumDetail(props) {\n  const [medium, setMedium] = useState(null);\n  const [createPost, setCreatePost] = useState(false);\n  const [updated, setUpdated] = useState(false)\n  const { id } = useParams();\n  const { loggedInUser } = props;\n\n\n\n  useEffect(() => {\n    const fetchMedium = async () => {\n      const mediumData = await getOneMedium(id);\n      setMedium(mediumData);\n    }\n    fetchMedium(id);\n  }, [id, createPost, updated])\n\n\n  return (\n    <>{!createPost ?\n      <>\n        <h1>{medium?.name}</h1>\n        <h2 onClick={() => setCreatePost(!createPost)}>post to {medium?.name}</h2>\n        {medium?.posts.map((post) => (\n          <PostDetail\n            updated={updated}\n            setUpdated={setUpdated}\n            loggedInUser={loggedInUser}\n            key={post.id}\n            post={post} />\n        ))}\n      </>\n      :\n      <PostCreate\n        loggedInUser={loggedInUser}\n        createPost={createPost}\n        setCreatePost={setCreatePost}\n        medium={medium}\n        mediumId={id} />\n    }\n    </>\n  )\n}","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/post/PostCreate.jsx",[],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/services/media.js",["92"],"import api from './apiConfig'\n\nexport const getAllMedia = async () => {\n  const resp = await api.get('/media');\n  return resp.data;\n}\n\nexport const getOneMedium = async (id) => {\n  const resp = await api.get(`/media/${id}`);\n  return resp.data;\n}\n\nexport const addMedium = async (mediumId, userId) => {\n  const resp = await api.put(`/media/${mediumId}/users/${userId}`)\n  return resp.data;\n}\n\nexport const removeMediun = async (mediumId, userId) => {\n  const resp = await api.patch(`/media/${mediumId}/users/${userId}`)\n}","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/post/PostDetail.jsx",["93","94","95"],"import { useState, useEffect, useReducer } from 'react';\nimport { getOneUser } from '../../services/users';\nimport PostEdit from './PostEdit';\n\nexport default function PostDetail(props) {\n  const { post, loggedInUser, updated, setUpdated } = props;\n  const [editPost, setEditPost] = useState(false);\n  const [user, setUser] = useState('');\n\n\n\n  const updateCreatedAt = (str) => {\n    let newStr = str.split('').splice(0, 10).join('').split('-').reverse()\n    return newStr.map(item => item.charAt(0) === '0' ? item.slice(1) : item).join('/')\n  }\n\n  useEffect(() => {\n    const fetchUser = async (id) => {\n      const user = await (getOneUser(id));\n      setUser(user.username)\n    }\n    fetchUser(post.user_id)\n  }, [editPost])\n\n\n  return (\n    <>\n      {!editPost ?\n        <div>\n          {loggedInUser?.id == post.user_id ?\n            <p onClick={() => setEditPost(!editPost)}>Edit</p>\n            :\n            <> </>\n          }\n          <h3>{post.subject}</h3>\n          <h4>{user}</h4>\n          <p>{post.content}</p>\n          <p>posted: {updateCreatedAt(post.created_at)}</p>\n        </div>\n        :\n        <PostEdit\n          editPost={editPost}\n          setEditPost={setEditPost}\n          post={post}\n          updated={updated}\n          setUpdated={setUpdated}\n        />\n      }\n    </>\n  )\n}\n","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/post/PostEdit.jsx",[],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/services/posts.js",["96","97","98"],"import api from './apiConfig'\n\nexport const getAllPosts = async (mediumId) => {\n  const resp = await api.get(`/media/${mediumId}/posts/`);\n}\n\nexport const getOnePost = async (id) => {\n  const resp = await api.get(`/posts/${id}`)\n}\n\nexport const addPost = async (mediumId, postData) => {\n  const resp = await api.post(`/media/${mediumId}/posts/`, { post: postData })\n  return resp.data\n}\n\nexport const putPost = async (id, postData) => {\n  const resp = await api.put(`/posts/${id}`, {post: postData})\n}\n\nexport const destroyPost = async (id) => {\n  const resp = await api.delete(`posts/${id}`);\n  return resp;\n}","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/medium/MediumRequest.jsx",[],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/services/users.js",[],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/services/auth.js",[],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/user/Profile.jsx",["99","100"],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/components/Layout.jsx",[],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/stylesheets/ProfileStyles.js",[],{"ruleId":"101","severity":1,"message":"102","line":7,"column":31,"nodeType":"103","messageId":"104","endLine":7,"endColumn":41},{"ruleId":"105","severity":1,"message":"106","line":29,"column":6,"nodeType":"107","endLine":29,"endColumn":8,"suggestions":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"101","severity":1,"message":"113","line":10,"column":10,"nodeType":"103","messageId":"104","endLine":10,"endColumn":15},{"ruleId":"101","severity":1,"message":"114","line":1,"column":17,"nodeType":"103","messageId":"104","endLine":1,"endColumn":25},{"ruleId":"115","severity":1,"message":"116","line":15,"column":15,"nodeType":"117","endLine":15,"endColumn":43},{"ruleId":"101","severity":1,"message":"118","line":2,"column":10,"nodeType":"103","messageId":"104","endLine":2,"endColumn":14},{"ruleId":"101","severity":1,"message":"119","line":19,"column":9,"nodeType":"103","messageId":"104","endLine":19,"endColumn":13},{"ruleId":"101","severity":1,"message":"120","line":1,"column":31,"nodeType":"103","messageId":"104","endLine":1,"endColumn":41},{"ruleId":"105","severity":1,"message":"121","line":23,"column":6,"nodeType":"107","endLine":23,"endColumn":16,"suggestions":"122"},{"ruleId":"123","severity":1,"message":"124","line":30,"column":29,"nodeType":"125","messageId":"126","endLine":30,"endColumn":31},{"ruleId":"101","severity":1,"message":"119","line":4,"column":9,"nodeType":"103","messageId":"104","endLine":4,"endColumn":13},{"ruleId":"101","severity":1,"message":"119","line":8,"column":9,"nodeType":"103","messageId":"104","endLine":8,"endColumn":13},{"ruleId":"101","severity":1,"message":"119","line":17,"column":9,"nodeType":"103","messageId":"104","endLine":17,"endColumn":13},{"ruleId":"101","severity":1,"message":"114","line":1,"column":10,"nodeType":"103","messageId":"104","endLine":1,"endColumn":18},{"ruleId":"101","severity":1,"message":"127","line":1,"column":20,"nodeType":"103","messageId":"104","endLine":1,"endColumn":29},"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["128"],"no-native-reassign",["129"],"no-negated-in-lhs",["130"],"'posts' is assigned a value but never used.","'useState' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Link' is defined but never used.","'resp' is assigned a value but never used.","'useReducer' is defined but never used.","React Hook useEffect has a missing dependency: 'post.user_id'. Either include it or remove the dependency array.",["131"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useEffect' is defined but never used.",{"desc":"132","fix":"133"},"no-global-assign","no-unsafe-negation",{"desc":"134","fix":"135"},"Update the dependencies array to be: [history]",{"range":"136","text":"137"},"Update the dependencies array to be: [editPost, post.user_id]",{"range":"138","text":"139"},[916,918],"[history]",[716,726],"[editPost, post.user_id]"]