[{"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/medium/MediumDetail.jsx":"1","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/post/PostCreate.jsx":"2","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/post/PostEdit.jsx":"3","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/post/PostDetail.jsx":"4","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/stylesheets/MediumStyles.js":"5","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/medium/Media.jsx":"6","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/stylesheets/MediaStyles.js":"7","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/stylesheets/UserAside.js":"8","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/components/UserAside.jsx":"9"},{"size":2391,"mtime":1606963486818,"results":"10","hashOfConfig":"11"},{"size":1688,"mtime":1606964515577,"results":"12","hashOfConfig":"11"},{"size":1953,"mtime":1606965872102,"results":"13","hashOfConfig":"11"},{"size":1890,"mtime":1606964946036,"results":"14","hashOfConfig":"11"},{"size":2084,"mtime":1606965898100,"results":"15","hashOfConfig":"11"},{"size":1290,"mtime":1606957220360,"results":"16","hashOfConfig":"11"},{"size":1405,"mtime":1606959698762,"results":"17","hashOfConfig":"11"},{"size":544,"mtime":1606964357204,"results":"18","hashOfConfig":"11"},{"size":1146,"mtime":1606963211334,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1xm85ty",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/medium/MediumDetail.jsx",["40"],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/post/PostCreate.jsx",[],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/post/PostEdit.jsx",["41","42","43"],"import { useState } from 'react';\nimport { putPost, destroyPost } from '../../services/posts';\n// import FormStyles from '../../stylesheets/FormStyles';\n\nexport default function PostCreate(props) {\n  const { post, updated, setUpdated, medium, editPost, setEditPost, user, updateCreatedAt } = props\n  const [formData, setFormData] = useState({\n    subject: post.subject,\n    content: post.content,\n    user_id: post.user_id,\n    medium_id: post.medium_id\n  })\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value\n    }))\n  }\n\n  const handleSubmit = async (id, formData) => {\n    await putPost(id, formData);\n    setEditPost(!editPost);\n    setUpdated(!updated);\n  }\n\n  return (\n    <>\n      <div className=\"post\">\n        <form onSubmit={(e) => {\n          e.preventDefault();\n          handleSubmit(post.id, formData)\n        }}>\n          <div className=\"post-top\">\n            <div className=\"user-info\">\n              <img id=\"user-pic\" src={user.img_url ? user.img_url : \"https://images.unsplash.com/photo-1439436556258-1f7fab1bfd4f?ixid=MXwxMjA3fDB8MHxzZWFyY2h8MXx8YW5pbWF0aW9ufGVufDB8fDB8&ixlib=rb-1.2.1&auto=format&fit=crop&w=700&q=60\"} alt={user.username} />\n              <h4>{user.username}</h4>\n            </div>\n            <input\n              type=\"text\"\n              name=\"subject\"\n              value={formData.subject}\n              onChange={handleChange}\n              id=\"subject\"\n            />\n            <h6 onClick={() => setEditPost(!editPost)}>Cancel</h6>\n          </div>\n          <div id=\"content\">\n            <textarea\n              type=\"text\"\n              name=\"content\"\n              value={formData.content}\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"button-box\">\n            <button type=\"submit\">save</button>\n          </div>\n        </form>\n      </div>\n    </>\n  )\n}","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/post/PostDetail.jsx",["44","45"],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/stylesheets/MediumStyles.js",[],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/medium/Media.jsx",["46","47"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport MediaStyles from '../../stylesheets/MediaStyles';\nimport UserAside from '../../components/UserAside';\n\nexport default function Media(props) {\n  const { media, loggedInUser } = props\n\n  \n  return (\n    <MediaStyles>\n      <h1>all media</h1>\n      <div className=\"all-media\">\n        <div className=\"user-aside\">\n          <UserAside\n            media={media}\n            loggedInUser={loggedInUser} />\n        </div>\n        <div className=\"media-container\">\n          {\n            media.map((medium) => (\n              <React.Fragment key={medium.id} >\n                <div className=\"media-card\">\n                  <div id=\"image-container\">\n                    <img src={medium.img_url} />\n                  </div>\n                  <div className=\"media-card-right\">\n                    <Link to={`/media/${medium.id}`}>\n                      <h2>{medium.name}</h2>\n                    </Link>\n                    <div className=\"description\">\n                      <p id=\"description\">{medium.description}</p>\n                    </div>\n                  </div>\n                </div>\n              </React.Fragment>\n            ))\n          }\n        </div>\n      </div>\n    </MediaStyles>\n  )\n}","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/stylesheets/MediaStyles.js",[],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/stylesheets/UserAside.js",[],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/components/UserAside.jsx",["48"],{"ruleId":"49","severity":1,"message":"50","line":2,"column":10,"nodeType":"51","messageId":"52","endLine":2,"endColumn":14},{"ruleId":"49","severity":1,"message":"53","line":2,"column":19,"nodeType":"51","messageId":"52","endLine":2,"endColumn":30},{"ruleId":"49","severity":1,"message":"54","line":6,"column":38,"nodeType":"51","messageId":"52","endLine":6,"endColumn":44},{"ruleId":"49","severity":1,"message":"55","line":6,"column":75,"nodeType":"51","messageId":"52","endLine":6,"endColumn":90},{"ruleId":"56","severity":1,"message":"57","line":23,"column":6,"nodeType":"58","endLine":23,"endColumn":16,"suggestions":"59"},{"ruleId":"60","severity":1,"message":"61","line":36,"column":31,"nodeType":"62","messageId":"63","endLine":36,"endColumn":33},{"ruleId":"49","severity":1,"message":"64","line":1,"column":17,"nodeType":"51","messageId":"52","endLine":1,"endColumn":25},{"ruleId":"65","severity":1,"message":"66","line":25,"column":21,"nodeType":"67","endLine":25,"endColumn":49},{"ruleId":"49","severity":1,"message":"68","line":1,"column":20,"nodeType":"51","messageId":"52","endLine":1,"endColumn":29},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'destroyPost' is defined but never used.","'medium' is assigned a value but never used.","'updateCreatedAt' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'post.user_id'. Either include it or remove the dependency array.","ArrayExpression",["69"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.",{"desc":"70","fix":"71"},"Update the dependencies array to be: [editPost, post.user_id]",{"range":"72","text":"73"},[695,705],"[editPost, post.user_id]"]