[{"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/medium/MediumDetail.jsx":"1","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/post/PostCreate.jsx":"2","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/post/PostEdit.jsx":"3","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/post/PostDetail.jsx":"4","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/stylesheets/MediumStyles.js":"5","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/medium/Media.jsx":"6","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/stylesheets/MediaStyles.js":"7","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/stylesheets/UserAside.js":"8","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/components/UserAside.jsx":"9"},{"size":2167,"mtime":1606960249421,"results":"10","hashOfConfig":"11"},{"size":1651,"mtime":1606938337653,"results":"12","hashOfConfig":"11"},{"size":1353,"mtime":1606861398596,"results":"13","hashOfConfig":"11"},{"size":1301,"mtime":1606918254579,"results":"14","hashOfConfig":"11"},{"size":743,"mtime":1606960485098,"results":"15","hashOfConfig":"11"},{"size":1290,"mtime":1606957220360,"results":"16","hashOfConfig":"11"},{"size":1405,"mtime":1606959698762,"results":"17","hashOfConfig":"11"},{"size":596,"mtime":1606957497877,"results":"18","hashOfConfig":"11"},{"size":1066,"mtime":1606959476807,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"1xm85ty",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/medium/MediumDetail.jsx",["41"],"import React, { useState, useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { getOneMedium } from '../../services/media'\nimport MediumStyles from '../../stylesheets/MediumStyles';\nimport PostCreate from '../post/PostCreate';\nimport PostDetail from '../post/PostDetail';\nimport UserAside from '../../components/UserAside';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPencilAlt } from '@fortawesome/free-solid-svg-icons';\n\nexport default function MediumDetail(props) {\n  const [medium, setMedium] = useState(null);\n  const [createPost, setCreatePost] = useState(false);\n  const [updated, setUpdated] = useState(false)\n  const { id } = useParams();\n  const { loggedInUser, media } = props;\n\n\n\n  useEffect(() => {\n    const fetchMedium = async () => {\n      const mediumData = await getOneMedium(id);\n      setMedium(mediumData);\n    }\n    fetchMedium(id);\n  }, [id, createPost, updated])\n\n\n  return (\n\n    <MediumStyles>\n      <div className=\"user-aside\">\n        <UserAside\n          media={media}\n          loggedInUser={loggedInUser} />\n      </div>\n      {!createPost ?\n        <div className=\"medium-parent\">\n\n          <div\n            className=\"medium-title\">\n            <img src={medium?.img_url} alt={medium?.name} />\n            <h1 className=\"name\">{medium?.name}</h1>\n            <h4>{medium?.posts.length} posts</h4>\n          </div>\n\n          <p\n            className=\"create-post\"\n            onClick={() => setCreatePost(!createPost)}>new post <FontAwesomeIcon className=\"icon\" icon={faPencilAlt} />\n          </p>\n          <div className=\"post-container\">\n            {medium?.posts.map((post) => (\n              <PostDetail\n                updated={updated}\n                setUpdated={setUpdated}\n                loggedInUser={loggedInUser}\n                key={post.id}\n                post={post} />\n            ))}\n          </div>\n        </div>\n        :\n        <PostCreate\n          loggedInUser={loggedInUser}\n          createPost={createPost}\n          setCreatePost={setCreatePost}\n          medium={medium}\n          mediumId={id} />\n      }\n    </MediumStyles>\n\n  )\n}","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/post/PostCreate.jsx",[],["42","43"],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/post/PostEdit.jsx",[],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/post/PostDetail.jsx",["44","45"],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/stylesheets/MediumStyles.js",[],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/screens/medium/Media.jsx",["46","47"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport MediaStyles from '../../stylesheets/MediaStyles';\nimport UserAside from '../../components/UserAside';\n\nexport default function Media(props) {\n  const { media, loggedInUser } = props\n\n  \n  return (\n    <MediaStyles>\n      <h1>all media</h1>\n      <div className=\"all-media\">\n        <div className=\"user-aside\">\n          <UserAside\n            media={media}\n            loggedInUser={loggedInUser} />\n        </div>\n        <div className=\"media-container\">\n          {\n            media.map((medium) => (\n              <React.Fragment key={medium.id} >\n                <div className=\"media-card\">\n                  <div id=\"image-container\">\n                    <img src={medium.img_url} />\n                  </div>\n                  <div className=\"media-card-right\">\n                    <Link to={`/media/${medium.id}`}>\n                      <h2>{medium.name}</h2>\n                    </Link>\n                    <div className=\"description\">\n                      <p id=\"description\">{medium.description}</p>\n                    </div>\n                  </div>\n                </div>\n              </React.Fragment>\n            ))\n          }\n        </div>\n      </div>\n    </MediaStyles>\n  )\n}","/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/stylesheets/MediaStyles.js",[],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/stylesheets/UserAside.js",[],"/Users/edwarddidonato/General_Assembly/unit_4/project/CoLab/client/src/components/UserAside.jsx",["48"],{"ruleId":"49","severity":1,"message":"50","line":2,"column":10,"nodeType":"51","messageId":"52","endLine":2,"endColumn":14},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":23,"column":6,"nodeType":"59","endLine":23,"endColumn":16,"suggestions":"60"},{"ruleId":"61","severity":1,"message":"62","line":30,"column":29,"nodeType":"63","messageId":"64","endLine":30,"endColumn":31},{"ruleId":"49","severity":1,"message":"65","line":1,"column":17,"nodeType":"51","messageId":"52","endLine":1,"endColumn":25},{"ruleId":"66","severity":1,"message":"67","line":25,"column":21,"nodeType":"68","endLine":25,"endColumn":49},{"ruleId":"49","severity":1,"message":"69","line":1,"column":20,"nodeType":"51","messageId":"52","endLine":1,"endColumn":29},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","no-native-reassign",["70"],"no-negated-in-lhs",["71"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'post.user_id'. Either include it or remove the dependency array.","ArrayExpression",["72"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"73","fix":"74"},"Update the dependencies array to be: [editPost, post.user_id]",{"range":"75","text":"76"},[704,714],"[editPost, post.user_id]"]